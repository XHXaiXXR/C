智能指针
	智能指针不是一个指针而是一个模板，智能指针实例化出来的对象具有和指针相似的行为，但它能自动释放所指向的对象，所以称之为“智能指针”。
	比如我们用普通指针来创建一个指向某个对象的指针，那么我们需要手动去释放，但是智能指针不同，他是一个类，可以自动调用析构函数去释放。

auto_ptr:auto_ptr是通过权限转移的方式来防止值拷贝所带来的问题，所谓的权限转移是说开辟动态内存任何时候只能由一个指针指向。

scoped_ptr:由于auto_ptr的行为和真正的指针有着一定的区别，尤其是权限转移的这种方法。为了防止值拷带来的问题，所以scoped_ptr从根本上就不允许拷贝和赋值。（防拷贝，防赋值）

那么如果防拷贝防赋值呢？
	我们将拷贝构造函数和赋值运算符重载（=）只声明（证明有构造函数和赋值运算符重载（=），不去自动生成构造函数和赋值运算符重载（=）），不定义。并将声明放在私有或保护作用域内。

explicit:explicit和构造函数一起使用,指明构造函数只能显示使用,目的是为了防止不必要的隐式转化

